# Reading pref.tcl
# //  Questa Intel Starter FPGA Edition-64
# //  Version 2023.3 win64 Jul 17 2023
# //
# //  Copyright 1991-2023 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  QuestaSim and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# do Basic_CPU_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Questa Intel Starter FPGA Edition-64 vmap 2023.3 Lib Mapping Utility 2023.07 Jul 17 2023
# vmap work rtl_work 
# Copying c:/intelfpga_lite/23.1std/questa_fse/win64/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vlog -sv -work work +incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU {C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/system.sv}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 15:26:22 on Sep 10,2024
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU" C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/system.sv 
# -- Compiling module system
# 
# Top level modules:
# 	system
# End time: 15:26:22 on Sep 10,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU {C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/memory.sv}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 15:26:22 on Sep 10,2024
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU" C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/memory.sv 
# -- Compiling module memory
# 
# Top level modules:
# 	memory
# End time: 15:26:22 on Sep 10,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU {C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/lsu.sv}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 15:26:23 on Sep 10,2024
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU" C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/lsu.sv 
# -- Compiling module load_store_unit
# 
# Top level modules:
# 	load_store_unit
# End time: 15:26:23 on Sep 10,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU {C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/cpu.sv}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 15:26:23 on Sep 10,2024
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU" C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/cpu.sv 
# -- Compiling module core
# 
# Top level modules:
# 	core
# End time: 15:26:23 on Sep 10,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU {C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/alu.sv}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 15:26:23 on Sep 10,2024
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU" C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/alu.sv 
# -- Compiling module arithmetic_logic_unit
# 
# Top level modules:
# 	arithmetic_logic_unit
# End time: 15:26:23 on Sep 10,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU {C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/regs.sv}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 15:26:23 on Sep 10,2024
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU" C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/regs.sv 
# -- Compiling module registers
# 
# Top level modules:
# 	registers
# End time: 15:26:23 on Sep 10,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU {C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/pfcu.sv}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 15:26:23 on Sep 10,2024
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU" C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/pfcu.sv 
# -- Compiling module program_flow_control_unit
# 
# Top level modules:
# 	program_flow_control_unit
# End time: 15:26:23 on Sep 10,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -sv -work work +incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU {C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/testbench.sv}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 15:26:23 on Sep 10,2024
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU" C:/Users/harve/Documents/Basic_CPU_Stuff/Basic_CPU/testbench.sv 
# -- Compiling module testbench
# 
# Top level modules:
# 	testbench
# End time: 15:26:23 on Sep 10,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L fiftyfivenm_ver -L rtl_work -L work -voptargs="+acc"  testbench
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L fiftyfivenm_ver -L rtl_work -L work -voptargs=""+acc"" testbench 
# Start time: 15:26:23 on Sep 10,2024
# ** Note: (vsim-3812) Design is being optimized...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility.
# ** Note: (vopt-143) Recognized 1 FSM in module "core(fast)".
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.testbench(fast)
# Loading work.system(fast)
# Loading work.memory(fast)
# Loading work.core(fast)
# Loading work.registers(fast)
# Loading work.load_store_unit(fast)
# Loading work.arithmetic_logic_unit(fast)
# Loading work.program_flow_control_unit(fast)
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run 200 ns
# Write memory value: xxxxxxxx
# Write memory value: xxxxxxxx
# Write memory value: xxxxxxxx
# Write memory value: xxxxxxxx
# Write memory value: xxxxxxxx
# Write memory value: xxxxxxxx
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
add wave -position end sim:/testbench/sys/cpu/*
add wave -position end sim:/testbench/sys/cpu/lsu/*
add wave -position end sim:/testbench/sys/cpu/alu/*
add wave -position end sim:/testbench/sys/cpu/pfcu/*
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-8009) Loading existing optimized design _opt
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading work.testbench(fast)
# Loading work.system(fast)
# Loading work.memory(fast)
# Loading work.core(fast)
# Loading work.registers(fast)
# Loading work.load_store_unit(fast)
# Loading work.arithmetic_logic_unit(fast)
# Loading work.program_flow_control_unit(fast)
run
# Write memory value: xxxxxxxx
# Write memory value: xxxxxxxx
# Write memory value: xxxxxxxx
# Write memory value: xxxxxxxx
# Write memory value: xxxxxxxx
# Write memory value: xxxxxxxx
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00000010
# Causality operation skipped due to absence of debug database file
run
# Write memory value: 00000010
# Write memory value: 00000010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00011010
# Write memory value: 00110010
# Write memory value: 00110010
